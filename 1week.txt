내가 작업중인 공간의 주소를 알려줌
pwd (print working directory의 줄임말)-크게필요없

작업중인 공간의 폴더 안에 무엇이 담겨있는지를 알려줌
ls 
ls -l (더 자세하게./접근권한/만든사람/만든날짜/파일이름)공개
ls -a -l ==ls-al (ls-l로 볼 수 없는 숨겨져있는 파일도 같이 나타내줌,) 
ls-alt (시간순정렬)

clear-환경정리

cd(change directory) 작업공간의 변경
cd coding ==작업공간을 coding 로 변경

cd.  (현재의 디렉토리로 이동)
cd.. (이전 디렉토리로 이동)
cd- (이전으로 돌아가기)
cd suin/폴더/수인 (해당 디렉토리로 이동)
cd ../../..가능(여러단계 디렉토리 한번에 이동)
cd~ (운영체제에서 정해주는 원시 디렉토리로 이동)
--------------
mkdir 폴더이름( make directory 폴더==폴더라는 이름의 디렉토리 만들기)
touch var.exe (파일(실행파일 등)생성에 보통 사용 /시간변경.파일수정 등에 활용 가능)

rm 이름(remove 이름==디렉토리에 있는 파일을 제거./디렉토리는 지울 수 없음)
rm -rf 디렉토리.또는 파일(디렉토리나 파일 둘 다 삭제가 가능/디렉토리 지울때쓰면 좋음)
---------------
vim suin.txt(빔이라는 툴을 활용해서 suin이라는 텍스트를 만들거나 수정할 수 있음)
insert 모드로 변경 (i나 a 단축기를 눌러 하단에 insert 모드 변경을 확인하면 타자 쓸 수 있음. esc누르면 insert 모드가 사라지면서 타자 못씀)
저장하는법=esc모드로 insert 모드를 꺼주고, :wq라고 작성하면 저장하고 빔 바깥으로 빠져나와짐
저장 안하고 끄는 법 =esc모드 insert 모드를 꺼주고 :q! 
cat suin.txt(파일엿보기, 파일 수정 안하고도 파일 내부를 엿볼 수 있음/ 텍스트 뿐만 아니라 한글, c, 등의 문서작성 파일들을 엿볼 수 있음)
cp suin.txt suinn.txt (suin이라는 파일을 suinn라는 이름의 파일로 내용 똑같이 복사해서 만들어줌) 
+경로이동시 /사용하면 좋음
mv suin.txt suinn.txt(이름변경)

총정리: pwd ls mkdir touch mv cp vim cat cd rm (가장 많이 사용되는 기초명령어임)
-------------------------------------------------------------------------------------------------------------------
깃은 버전관리이면서 협업을 위한 툴이기 떄문에
깃을 통해서 내가 작성한 코드를 누가 만들었는지, 누가 수정했는지 등을 알 수 있음
git config --global user.name "suin"(사용자 설정)
git config --global user.email "su96in43@naver.com"

git config user,name(설정된 사용자 이름, 이메일 확인)
git config user.email
-----------------------------------------------------
git init(이 폴더에서 나는 작업하겠다. 깃 너는 이제 이 폴더를 관리해라)
->(master)이라는 표식이 생김(이 폴더는 깃이 관리하고 있구나를 알면 됩니다.
ls-al 치면 숨겨진 폴더 ,git등장 (오,, 깃이 관리하고 있구나를 확인할 수 있음)

git status (폴더안의 변화를 알아낼 수 있음)

깃의 과정
작업트리 작업중
스테이지(커밋전)(저장전)
저장소(레포지토리) 커밋후(저장)

git add 파일이름 (파일을 커밋전으로 저장전으로 이동시킴)
git commit -m "하이"(파일을 커밋후로 이동시킴, 완전히 업로드!,+추가적으로 하고싶은말))
git log-어떤 이메일의 어떤 사람이 언제 어떤 파일을 커밋을 진행했는지 보여줄 수 있음(협업하기 좋죠)

git add. 모든 파일을 커밋전으로 올려줌
git commit -m "쨔쟌"(커밋~
git commit -am"안뇽"  모든 파일의 커밋과 업로드를 동시에 
만약 이미 업로드된게 있는 경우라면 업로드 된거만 먼저  커밋해줌..(+새로만든 파일은 관리가 안됨, (약간이해안됨 ㅋㅋㄹㅃㅃ)



+운영체제. 리눅스 공부는 꼭 하면 좋을것 같다